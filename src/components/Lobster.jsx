/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/Lobster.glb -o src/components/Lobster.jsx -k -K -r public 
*/

import React, { useRef, useState, useEffect } from 'react';
import { useGLTF } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber';

export function Lobster(props) {
  const meshRef = useRef();
  const [rotation, setRotation] = useState(props.rotation || [0, 0, 0]);
  const [position, setPosition] = useState(props.position || [0, 0, 0]);
  const [direction, setDirection] = useState(props.direction || [1, 1, 0]);

  const { camera, size } = useThree();

  useEffect(() => {
    if (meshRef.current) {
        const [x, y, z] = position;
        meshRef.current.position.set(x, y, z);
    }
  }, []);

  useFrame(() => {
    if (meshRef.current) {
      setRotation((prev) => [prev[0] + 0.005, prev[1] + 0.02, prev[2] + 0.015]);
      if (props.useVelocity) {
        const [x, y, z] = position;
        const [dx, dy, dz] = direction;
        const [ox, oy, oz] = meshRef.current.position;
        meshRef.current.position.set(ox + dx, oy + dy, oz + 0);
      }
    }
  });

  const { nodes, materials } = useGLTF('/models/Lobster.glb')
  return (
    <group {...props} dispose={null}>
      <group ref={meshRef} rotation={rotation}>
        <mesh name="Lobster_mesh" geometry={nodes.Lobster_mesh.geometry} material={materials.Lobster_Mat} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/Lobster.glb')
